@using Microsoft.AspNet.Identity
@using KaylaBugTracker.ViewModels
@model DashboardViewModel
@{
	ViewBag.Title = "Home Page";
	var userHelper = new KaylaBugTracker.Helpers.UserHelper();
}

<style>
	#myfirstchart {
		min-height: 250px;
	}
</style>

<div class="main-panel">
	<div class="content-wrapper pb-0">
		<div class="page-header">
			<h5>This is your dashboard</h5>
			<h1 class="mb-0">Hello @userHelper.GetFullName(User.Identity.GetUserId())</h1>
		</div>
		<div class="row">
			<div class="col-sm-2 grid-margin stretch-card">
				<div class="card">
					<div class="card-body large-card">
						<div class="d-xl-flex align-items-center mb-3">
							<div class="icon-bg">
								<i class="mdi mdi-tab"></i>
							</div>
							<div>
								<h4 class="mb-2 font-weight-light">Tickets Count:</h4>
							</div>
						</div>
						<div class="chart-wrapper">
							<span class="h1 float-right">
								@Model.TicketCount
							</span>
						</div>
					</div>
				</div>
			</div>
			<div class="col-sm-2 grid-margin stretch-card">
				<div class="card">
					<div class="card-body large-card">
						<div class="d-xl-flex align-items-center mb-3">
							<div class="icon-bg">
								<i class="mdi mdi-square-inc-cash"></i>
							</div>
							<div>
								<h4 class="mb-2 font-weight-light">High Priority Tickets:</h4>

							</div>
						</div>
						<div class="chart-wrapper">
							<span class="h1 float-right">
								@Model.HighPriorityTicketCount
							</span>
						</div>
					</div>
				</div>
			</div>
			<div class="col-sm-2 grid-margin stretch-card">
				<div class="card">
					<div class="card-body large-card">
						<div class="d-xl-flex align-items-center mb-3">
							<div class="icon-bg">
								<i class="mdi mdi-cart-plus"></i>
							</div>
							<div>
								<h4 class="mb-2 font-weight-light">New Ticket Count:</h4>
							</div>
						</div>
						<div class="chart-wrapper">
							<span class="h1 float-right">
								@Model.NewTicketCount
							</span>
						</div>
					</div>
				</div>
			</div>
			<div class="col-sm-2 grid-margin stretch-card">
				<div class="card">
					<div class="card-body large-card">
						<div class="d-xl-flex align-items-center mb-3">
							<div class="icon-bg">
								<i class="mdi mdi-tab"></i>
							</div>
							<div>
								<h4 class="mb-2 font-weight-light">Projects Count:</h4>
							</div>
						</div>
						<div class="chart-wrapper">
							<span class="h1 float-right">
								@Model.ProjectVM.ProjectCount
							</span>
						</div>
					</div>
				</div>
			</div>
			<div class="col-sm-3 grid-margin stretch-card">
				<div class="card">
					<div class="card-body large-card">
						<div class="d-xl-flex align-items-center mb-3">
							<div class="icon-bg">
								<i class="mdi mdi-tab"></i>
							</div>
							<div>
								<h4 class="mb-2 font-weight-light">Projects Managers:</h4>
							</div>
						</div>
						<div class="chart-wrapper">
							<span class="float-right">
								@foreach (var pm in Model.ProjectVM.AllPMs)
								{
									<h2>@pm.FullName</h2>
								}
							</span>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-xl-6 col-lg-12 grid-margin">
				<div class="row">
					<div class="col-sm-12 grid-margin stretch-card">
						<div class="card">
							<div class="card-body">
								<p class="card-title mb-1">Projects</p>
								<div class="row">
									<div class="col-sm-8 grid-margin">
										<table id="myTable" class="table table-bordered">
											<thead>
												<tr>
													<th>
														@Html.DisplayName("Project Name")
													</th>
													<th>
														@Html.DisplayName("Created")
													</th>
													<th>
														@Html.DisplayName("Archived")
													</th>
													<th></th>
												</tr>
											</thead>
											<tbody>
												@foreach (var project in Model.ProjectVM.AllProjects)
												{
													<tr>
														<td>
															@Html.DisplayFor(modelItem => project.Name)
														</td>
														<td>
															@Html.DisplayFor(modelItem => project.Created)
														</td>
														<td>
															@Html.DisplayFor(modelItem => project.IsArchived)
														</td>
														<td>
															@Html.ActionLink("Edit", "Edit", "Projects", new { id = project.Id }, null) |
															@Html.ActionLink("Details", "Details", "Projects", new { id = project.Id }, null)
														</td>
													</tr>
												}
											</tbody>
										</table>
									</div>
									<div class="col-sm-4 grid-margin">
										<div class="canvas-bar-wrapper">
											<canvas id="performanceChart"></canvas>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="col-sm-12">
						<div class="row">

						</div>
					</div>
				</div>
			</div>
		</div>
		
	</div>
	<!-- content-wrapper ends -->
	<!-- partial:partials/_footer.html -->
	<!-- partial -->
</div>



@section scripts{
	<script>
		var url = '@Url.Action("GetAllTicketPriorityData", "MorrisCharts")'
		$.ajax({
			type: 'POST',
			contentType: "applications/json; charset=utf-8",
			url: ,
			dataType: 'json',
			data: JSON.stringify(Meeting),
			success: function (response) {
				new Morris.Bar({
					// ID of the element in which to draw the chart.
					element: 'myfirstchart',
					// Chart data records -- each entry in this array corresponds to a point on
					// the chart.
					data: response,
					// The name of the data record attribute that contains x-values.
					xkey: 'priority',
					// A list of names of data record attributes that contain y-values.
					ykeys: ['Value'],
					// Labels for the ykeys -- will be displayed when you hover over the
					// chart.
					labels: ['Value']
				});
			},
			error: function (jqXHR, textStatus, errorThrown)
			{
				alert:
			}
		})


		
	</script>
	<script>
		var url = '@Url.Action("GetAllTicketPriorityData", "MorrisCharts")'
		$.ajax({
			type: 'POST',
			contentType: "applications/json; charset=utf-8",
			url: ,
			dataType: 'json',
			data: JSON.stringify(Meeting),
			success: function (response) {
				new Morris.Bar({
					// ID of the element in which to draw the chart.
					element: 'myfirstchart',
					// Chart data records -- each entry in this array corresponds to a point on
					// the chart.
					data: response,
					// The name of the data record attribute that contains x-values.
					xkey: 'priority',
					// A list of names of data record attributes that contain y-values.
					ykeys: ['Value'],
					// Labels for the ykeys -- will be displayed when you hover over the
					// chart.
					labels: ['Value']
				});
			},
			error: function (jqXHR, textStatus, errorThrown)
			{
				alert:
			}
		})


		
	</script>
	<script>
		var url = '@Url.Action("GetAllTicketPriorityData", "MorrisCharts")'
		$.ajax({
			type: 'POST',
			contentType: "applications/json; charset=utf-8",
			url: ,
			dataType: 'json',
			data: JSON.stringify(Meeting),
			success: function (response) {
				new Morris.Bar({
					// ID of the element in which to draw the chart.
					element: 'myfirstchart',
					// Chart data records -- each entry in this array corresponds to a point on
					// the chart.
					data: response,
					// The name of the data record attribute that contains x-values.
					xkey: 'priority',
					// A list of names of data record attributes that contain y-values.
					ykeys: ['Value'],
					// Labels for the ykeys -- will be displayed when you hover over the
					// chart.
					labels: ['Value']
				});
			},
			error: function (jqXHR, textStatus, errorThrown)
			{
				alert:
			}
		})


		
	</script>
}
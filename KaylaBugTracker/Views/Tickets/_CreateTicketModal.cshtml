@model KaylaBugTracker.Models.Ticket

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.Hidden("ProjectId", Model.Id)
		@Html.Hidden("OnPage", true)


		<div class="col-12">
			<div class="row">
				<div class="col-6">
					<div class="form-group">
						<div class="row align-items-center">
							<label class="control-label col-md-4 text-left" for="TicketPriorityId"><h4>Ticket Priority</h4></label>
							<div class="col-md-5">
								@Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
							</div>
						</div>
					</div>
				</div>
				<div class="col-6">
					<div class="form-group">
						<div class="row align-items-center">
							<label class="control-label col-md-4 text-center" for="TicketTypeId"><h4>Ticket Type</h4></label>
							<div class="col-md-5">
								@Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col-12">
					<div class="form-group">
						@Html.Label("Issue", htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.Editor("Issue", new { htmlAttributes = new { @class = "form-control issueBox" } })
						</div>
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col-12">
					<div class="form-group">
						<label class="control-label col-md-12" for="IssueDescription">Issue Description</label>
						<div class="col-md-10">
							@Html.TextArea("IssueDescription", new { @class = "form-control issueBox" })
						</div>
					</div>
				</div>
			</div>
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10 align-content-center">
					<input type="submit" value="Create" class="btn btn-inverse-success" />
				</div>
			</div>
		</div>
	</div>
	#region Commented Code
	@*<div class="form-horizontal">
			<h4>Ticket</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.Hidden("ProjectId")
			@Html.Hidden("SubmitterId")
			@Html.Hidden("Created")
			@Html.Hidden("Updated")

			<div class="form-group">
				@Html.LabelFor(model => model.TicketPriorityId, "TicketPriorityId", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.TicketStatusId, "TicketStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.TicketTypeId, "TicketTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.DeveloperId, "DeveloperId", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("DeveloperId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.DeveloperId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Issue, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Issue, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Issue, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IssueDescription, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.IssueDescription, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.IssueDescription, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IsResolved, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.IsResolved)
						@Html.ValidationMessageFor(model => model.IsResolved, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IsArchived, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.IsArchived)
						@Html.ValidationMessageFor(model => model.IsArchived, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Create" class="btn btn-default" />
				</div>
			</div>
		</div>*@
	#endregion
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@using Microsoft.AspNet.Identity;
@using KaylaBugTracker.Helpers;
@model IEnumerable<KaylaBugTracker.Models.Ticket>

@{
	ViewBag.Title = "Index";
	var ticketHelper = new TicketHelper();
}
<div class="main-panel">
	<div class="content-wrapper">
		<div class="row">
			<div class="col-12 grid-margin stretch-card">
				<div class="card">
					<div class="card-body">
						@if (User.IsInRole("Submitter"))
						{
							<p>
								@Html.ActionLink("Create New", "Create", "Tickets")
							</p>
						}
					</div>
				</div>
			</div>
		</div>
		<div class="card">
			<div class="card-body">
				<div class="row">
					<div class="col-12 grid-margin">
						@if (Model.Count() == 0)
						{
							<h3>You have no tickets to display</h3>
						}
						else
						{
					<div class="text-center">
						<h2>Index</h2>
						

						<h2>All Tickets</h2>
					</div>
							<hr />
							<table id="myTable" class="table-bordered">
								<thead>
									<tr>
										<th>
											Project
										</th>
										<th>
											Priority
										</th>
										<th>
											Status
										</th>
										<th>
											Type
										</th>
										<th>
											Submitter
										</th>
										<th>
											Developer
										</th>
										<th>
											@Html.DisplayNameFor(model => model.Created)
										</th>
										<th>
											@Html.DisplayNameFor(model => model.Updated)
										</th>
										<th>
											@Html.DisplayNameFor(model => model.IsResolved)
										</th>
										<th>
											@Html.DisplayNameFor(model => model.IsArchived)
										</th>
										<th></th>
									</tr>
								</thead>
								<tbody>
									@foreach (var item in Model)
									{
										<tr>
											<td>
												@Html.DisplayFor(modelItem => item.Project.Name)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.TicketPriority.Name)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.TicketStatus.Name)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.TicketType.Name)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.Submitter.FullName)
											</td>
											<td>
												@if (item.DeveloperId != null)
												{
													@Html.DisplayFor(modelItem => item.Developer.FullName)
												}
												else
												{
													<span>No Developer Assigned</span>
												}
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.Created)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.Updated)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.IsResolved)
											</td>
											<td>
												@Html.DisplayFor(modelItem => item.IsArchived)
											</td>
											<td>
												@if (ticketHelper.CanEditTicket(item.Id))
												{
													@Html.ActionLink("Edit", "Edit", new { id = item.Id }) <span> | </span>
													@Html.ActionLink("Details", "Dashboard", new { id = item.Id })
												}
											</td>
										</tr>
									}
								</tbody>
							</table>
							<hr />
							if (User.IsInRole("Developer"))
							{
								<h3>My Tickets</h3>
								<table id="myTable" class="table-bordered">
									<thead>
										<tr>
											<th>
												Project
											</th>
											<th>
												Priority
											</th>
											<th>
												Status
											</th>
											<th>
												Type
											</th>
											<th>
												Submitter
											</th>
											<th>
												Developer
											</th>
											<th>
												@Html.DisplayNameFor(model => model.Created)
											</th>
											<th>
												@Html.DisplayNameFor(model => model.Updated)
											</th>
											<th>
												@Html.DisplayNameFor(model => model.IsResolved)
											</th>
											<th>
												@Html.DisplayNameFor(model => model.IsArchived)
											</th>
											<th></th>
										</tr>
									</thead>
									<tbody>
										@foreach (var item in Model.Where(t => t.DeveloperId == User.Identity.GetUserId()))
										{
											<tr>
												<td>
													@Html.DisplayFor(modelItem => item.Project.Name)
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.TicketPriority.Name)
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.TicketStatus.Name)
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.TicketType.Name)
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.Submitter.FullName)
												</td>
												<td>
													@if (item.DeveloperId != null)
													{
														@Html.DisplayFor(modelItem => item.Developer.FullName)
													}
													else
													{
														<span>No Developer Assigned</span>
													}
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.Created)
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.Updated)
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.IsResolved)
												</td>
												<td>
													@Html.DisplayFor(modelItem => item.IsArchived)
												</td>
												<td>
													@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
													@Html.ActionLink("Dashboard", "Dashboard", new { id = item.Id })
												</td>
											</tr>
										}
									</tbody>
								</table>
							}
						}
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
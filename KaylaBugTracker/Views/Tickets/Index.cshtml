@using Microsoft.AspNet.Identity;
@using KaylaBugTracker.Helpers;
@model IEnumerable<KaylaBugTracker.Models.Ticket>

@{
	ViewBag.Title = "Index";
	var ticketHelper = new TicketHelper();
}

<link href="~/Content/datatables.min.css" rel="stylesheet" />

<div class="main-panel">
	<div class="content-wrapper">
		@*<div class="row">
				<div class="col-12 grid-margin stretch-card">
					<div class="card">
						<div class="card-body">
							@if (User.IsInRole("Submitter"))
							{
								<p>
									@Html.ActionLink("Create New", "Create", "Tickets")
								</p>
							}
						</div>
					</div>
				</div>
			</div>*@
		<div class="card">
			<div class="card-header text-center">
				<h2>Tickets</h2>
			</div>
			<div class="card-body">
				<div class="row">
					<div class="col-12 grid-margin">
						<div class="card border-0">
							<div class="card-header text-center bg-success">
								<h2 class="projectDetails">All Tickets</h2>
							</div>
							<div class="card-body">
								@if (Model.Count() == 0)
								{
									<h3>You have no tickets to display</h3>
								}
								else
								{
									<div class="table-responsive">
										<table id="myTable" class="table table-hover table-striped table-borderless">
											<thead>
												<tr>
													<th>
														Project
													</th>
													<th>
														Issue
													</th>
													<th>
														Priority
													</th>
													<th>
														Status
													</th>
													<th>
														Type
													</th>
													<th>
														Submitter
													</th>
													<th>
														Developer
													</th>
													<th>
														@Html.DisplayNameFor(model => model.Created)
													</th>
													<th>
														@Html.DisplayNameFor(model => model.Updated)
													</th>
													<th>
														@Html.DisplayNameFor(model => model.IsResolved)
													</th>
													<th>
														@Html.DisplayNameFor(model => model.IsArchived)
													</th>
													<th></th>
												</tr>
											</thead>
											<tbody>
												@foreach (var item in Model)
												{
													<tr>
														<td>
															@Html.DisplayFor(modelItem => item.Project.Name)
														</td>
														<td>
															@Html.DisplayFor(modelItem => item.Issue)
														</td>
														<td>
															@Html.DisplayFor(modelItem => item.TicketPriority.Name)
														</td>
														<td>
															@Html.DisplayFor(modelItem => item.TicketStatus.Name)
														</td>
														<td>
															@Html.DisplayFor(modelItem => item.TicketType.Name)
														</td>
														<td>
															@Html.DisplayFor(modelItem => item.Submitter.FullName)
														</td>
														<td>
															@if (item.DeveloperId != null)
															{
																@Html.DisplayFor(modelItem => item.Developer.FullName)
															}
															else
															{
																<span>No Developer Assigned</span>
															}
														</td>
														<td>
															@Html.DisplayFor(modelItem => item.Created)
														</td>
														<td>
															@Html.DisplayFor(modelItem => item.Updated)
														</td>
														<td>
															@Html.DisplayFor(modelItem => item.IsResolved)
														</td>
														<td>
															@Html.DisplayFor(modelItem => item.IsArchived)
														</td>
														<td>
															@if (ticketHelper.CanEditTicket(item.Id))
															{
																@Html.ActionLink("Details", "Dashboard", new { id = item.Id })
															}
														</td>
													</tr>
												}
											</tbody>
										</table>
									</div>
									<hr />
									if (User.IsInRole("Developer"))
									{
										<h3>My Tickets</h3>
										<div class="table-responsive">
											<table id="myTable2" class="table table-hover table-striped table-borderless">
												<thead>
													<tr>
														<th>
															Project
														</th>
														<th>
															Issue
														</th>
														<th>
															Priority
														</th>
														<th>
															Status
														</th>
														<th>
															Type
														</th>
														<th>
															Submitter
														</th>
														<th>
															Developer
														</th>
														<th>
															@Html.DisplayNameFor(model => model.Created)
														</th>
														<th>
															@Html.DisplayNameFor(model => model.Updated)
														</th>
														<th>
															@Html.DisplayNameFor(model => model.IsResolved)
														</th>
														<th>
															@Html.DisplayNameFor(model => model.IsArchived)
														</th>
														<th></th>
													</tr>
												</thead>
												<tbody>
													@foreach (var item in Model.Where(t => t.DeveloperId == User.Identity.GetUserId()))
													{
														<tr>
															<td>
																@Html.DisplayFor(modelItem => item.Project.Name)
															</td>
															<td>
																@Html.DisplayFor(modelItem => item.Issue)
															</td>
															<td>
																@Html.DisplayFor(modelItem => item.TicketPriority.Name)
															</td>
															<td>
																@Html.DisplayFor(modelItem => item.TicketStatus.Name)
															</td>
															<td>
																@Html.DisplayFor(modelItem => item.TicketType.Name)
															</td>
															<td>
																@Html.DisplayFor(modelItem => item.Submitter.FullName)
															</td>
															<td>
																@if (item.DeveloperId != null)
																{
																	@Html.DisplayFor(modelItem => item.Developer.FullName)
																}
																else
																{
																	<span>No Developer Assigned</span>
																}
															</td>
															<td>
																@Html.DisplayFor(modelItem => item.Created)
															</td>
															<td>
																@Html.DisplayFor(modelItem => item.Updated)
															</td>
															<td>
																@Html.DisplayFor(modelItem => item.IsResolved)
															</td>
															<td>
																@Html.DisplayFor(modelItem => item.IsArchived)
															</td>
															<td>
																@Html.ActionLink("Dashboard", "Dashboard", new { id = item.Id })
															</td>
														</tr>
													}
												</tbody>
											</table>
										</div>
									}
								}
							</div>
						</div>

					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section scripts{
	<script src="~/Scripts/jquery-3.5.1.min.js"></script>

	<script src="~/Scripts/datatables.min.js"></script>

	<script>
		$(document).ready(function () {
			$('#myTable').DataTable();
			$('#myTable2').DataTable();
			$('#myTable3').DataTable();
		});
	</script>

}
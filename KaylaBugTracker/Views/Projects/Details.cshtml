@model KaylaBugTracker.Models.Project
@using KaylaBugTracker.Helpers

@{
	ViewBag.Title = "Details";
	var projectHelper = new ProjectHelper();
	var userHelper = new UserRolesHelper();
}

<div class="main-panel">
	<div class="content-wrapper">
		<div class="card">
			<div class="card-header text-center">
				<div class="row">
					<div class="col-12">
						@if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
						{
							<button type="button" class="btn float-right" data-toggle="modal" data-target="#editProject">
								<i class="mdi mdi-36px mdi-folder-edit float-right"></i>
							</button>
						}
						<div class="text-center">
							<h2>Project Details</h2>
						</div>
					</div>
				</div>
			</div>
			<div class="card-body">
				<div class="row">
					<div class="col-12 col-lg-3">
						<div class="card border-0 projDetails">
							<div class="card-header bg-success text-center">
								<h2 class="projectDetails">Project Info</h2>
							</div>
							<div class="card-body projDetailBody">
								<h3>Project Name is <b>@Html.DisplayFor(model => model.Name)</b></h3>
								<h3>This project has <b>@Model.Tickets.Count</b> tickets</h3>
								<h3>Project created on <b>@Model.Created.ToString("dd MMM yyyy")</b></h3>
							</div>
						</div>
					</div>
					<div class="col-12 col-lg-3">
						<div class="card border-0 projDetails">
							<div class="card-header bg-success text-center">
								<h2 class="projectDetails">Project Manager</h2>
							</div>
							<div class="card-body text-center">
								@foreach (var pm in projectHelper.ListUsersOnProjectInRole(Model.Id, "Project Manager"))
								{
									<h3>@pm.FullName</h3>
								}
							</div>
						</div>
					</div>
					<div class="col-12 col-lg-3">
						<div class="card border-0 projDetails">
							<div class="card-header bg-success text-center">
								<h2 class="projectDetails">Developers</h2>
							</div>
							<div class="card-body text-center">
								@foreach (var dev in projectHelper.ListUsersOnProjectInRole(Model.Id, "Developer"))
								{
									<h3>@dev.FullName</h3>
								}
							</div>
						</div>
					</div>
					<div class="col-12 col-lg-3">
						<div class="card border-0 projDetails">
							<div class="card-header bg-success text-center">
								<h2 class="projectDetails">Submitters</h2>
							</div>
							<div class="card-body text-center">
								@foreach (var sub in projectHelper.ListUsersOnProjectInRole(Model.Id, "Submitter"))
								{
									<h3>@sub.FullName</h3>
								}
							</div>
						</div>
					</div>
				</div>
				<hr />
				<div class="row">
					<div class="col-12">
						<div class="card border-0">
							<div class="card-header bg-success text-center">
								<div class="row">
									<div class="col-12">
										@if (User.IsInRole("Submitter"))
										{
											<button type="button" class="float-right btn" data-toggle="modal" data-target="#createTicket">
												<i class="mdi mdi-36px mdi-plus-box modalIcon"></i>
											</button>
										}
										<div class="text-center">
											<h2 class="projectDetails matchButton">Tickets On Project</h2>
										</div>
									</div>
								</div>
							</div>
							<div class="card-body">
								@if (Model.Tickets.Count > 0)
								{
									<div class="table-responsive">
										<table id="myTable" class="table table-hover table-striped table-borderless">
											<thead>
												<tr>
													<th>Ticket Id</th>
													<th>Issue</th>
													<th>Ticket Priority</th>
													<th>Ticket Status</th>
													<th>Ticket Type</th>
													<th>Submitter</th>
													<th>Developer</th>
													<th>Actions</th>
												</tr>
											</thead>
											<tbody>
												@foreach (var ticket in Model.Tickets)
												{
													<tr>
														<td> @ticket.Id</td>
														<td>@Html.DisplayName(ticket.Issue)</td>
														<td>@Html.DisplayName(ticket.TicketPriority.Name)</td>
														<td>@Html.DisplayName(ticket.TicketStatus.Name)</td>
														<td>@Html.DisplayName(ticket.TicketType.Name)</td>
														<td>@Html.DisplayName(ticket.Submitter.FullName)</td>
														@if (ticket.Developer != null)
														{
															<td>@Html.DisplayName(ticket.Developer.FullName)</td>
														}
														else
														{
															<td>No Developer Assigned</td>
														}
													<td><a href="@Url.Action("Dashboard", "Tickets", new { id = ticket.Id })">Details</a></td>
													</tr>
												}
											</tbody>
										</table>
									</div>
								}
								else
								{
									<h4 class="card-title">This Project Has No Tickets.</h4>

								}
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@*Modal*@

<div class="modal fade" id="createTicket" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h2 class="modal-title text-center" id="exampleModalLabel">Add Ticket</h2>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
			</div>
			<div class="modal-body">
				@using (Html.BeginForm("Create", "Tickets", FormMethod.Post))
				{
					@Html.AntiForgeryToken()

					<div class="form-horizontal">
						@Html.ValidationSummary(true, "", new { @class = "text-danger" })
						@Html.Hidden("ProjectId", Model.Id)
						@Html.Hidden("OnPage", true)


						<div class="col-12">
							<div class="row">
								<div class="col-5 modalPriority">
									<div class="form-group">
										<div class="row align-items-center">
											<label class="control-label col-md-2 text-left addTicketModal" for="TicketPriorityId"><h4>Priority</h4></label>
											<div class="col-8">
												@Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
											</div>
										</div>
									</div>
								</div>
								<div class="col-5">
									<div class="form-group">
										<div class="row align-items-center">
											<label class="control-label col-md-2 text-center addTicketModal typeLabel" for="TicketTypeId"><h4>Type</h4></label>
											<div class="col-8">
												@Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
											</div>
										</div>
									</div>
								</div>
							</div>

							<div class="row">
								<div class="col-12">
									<div class="form-group">
										<label class="control-label col-md-12 addTicketModal" for="Issue"><h4>Issue</h4></label>
										<div class="col-md-12">
											@Html.Editor("Issue", new { htmlAttributes = new { @class = "form-control issueBox" } })
										</div>
									</div>
								</div>
							</div>
							<div class="row">
								<div class="col-12">
									<div class="form-group">
										<label class="control-label col-md-12 addTicketModal" for="IssueDescription"><h4>Issue Description</h4></label>
										<div class="col-md-12">
											@Html.TextArea("IssueDescription", new { @class = "form-control issueBox" })
										</div>
									</div>
								</div>
							</div>
							<div class="form-group">
								<div class="col-md-offset-2 col-md-12 align-content-center">
									<input type="submit" value="Create" class="btn btn-inverse-success btnWide" />
								</div>
							</div>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
</div>

<!---------------------------------------------- Edit Project Modal ------------------------------------------------------->
<div class="modal fade" id="editProject" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h2 class="modal-title" id="exampleModalLabel">Edit Project</h2>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
			</div>
			<div class="modal-body">
				@using (Html.BeginForm("EditProject", "Projects", new { projectId = Model.Id }))
				{
					@Html.AntiForgeryToken()

					<div class="form-group">
						<label class="control-label">Project Name</label>
						@Html.Editor("ProjectName", new { htmlAttributes = new { @class = "form-control", @value = "@Model.Name" } })
						<small class="form-control-feedback"> Enter the project name </small>
					</div>

					if (User.IsInRole("Admin"))
					{
						<div class="form-group mb-5">
							@{
								var managerIds = userHelper.UsersInRole("Project Manager").ToList();
								var selectedManagerIds = projectHelper.ListUserIdsOnProjectInRole(Model.Id, "Project Manager");

								var managersSelector = new MultiSelectList
								  (
									managerIds,
									"Id",
									"Email",
									selectedManagerIds
								  );

							}
							@Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2" })
							@Html.ListBox("ManagerIds", managersSelector, new { @class = "custom-select pull-right form-control", @size = 5 })
						</div>
					}

					<div class="form-group mb-5">
						@{
							var developerIds = userHelper.UsersInRole("Developer").ToList();
							var selectedDeveloperIds = projectHelper.ListUserIdsOnProjectInRole(Model.Id, "Developer");

							var developersSelector = new MultiSelectList
							  (
								developerIds,
								"Id",
								"Email",
								selectedDeveloperIds
							  );
						}
						@Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2" })
						@Html.ListBox("DeveloperIds", developersSelector, new { @class = "custom-select pull-right form-control", @size = 5 })
					</div>

					<div class="form-group mb-5">
						@{
							var submitterIds = userHelper.UsersInRole("Submitter").ToList();
							var selectedSubmitterIds = projectHelper.ListUserIdsOnProjectInRole(Model.Id, "Submitter");

							var submittersSelector = new MultiSelectList
							  (
								submitterIds,
								"Id",
								"Email",
								selectedSubmitterIds
							  );
						}
						@Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2" })
						@Html.ListBox("SubmitterIds", submittersSelector, new { @class = "custom-select pull-right form-control", @size = 5 })
					</div>

					<div class="form-group">
						<div class="col-md-offset-2 col-md-12 align-content-center">
							<input type="submit" value="Edit" class="btn btn-inverse-success btnWide" />
						</div>
					</div>
				}
			</div>
		</div>
	</div>
</div>